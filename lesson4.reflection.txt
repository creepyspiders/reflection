this is very intresting. so very very useful concept to allow collabrating just than pass the fils
directly. 

Why might you want to always pull changes manually
rather than having Git automatically stay up-to-date
with your remote repository?

no idea.

trying to add password cache to the git bash

Describe the differences between forks, clones, and
branches. When would you use one instead of another?

clone is to copy the entire repository without reference
to the origin of the copying. and it is done locally on
you own machine or between the web and your own machine.
branches is what you do with you commit history.you can 
modify the project according to your own preferences
forks is copy others repository via GitHub keeping the
track of the original creator.

when you callabrate with someone, you want to fork their
work, and when you do something on you own, you may
clone the repository to your machine. and when you make 
the changes to repository or experimental features. you 
want to branch your commit history.

What is the benefit of having a copy of the last known 
state of the remote stored locally?

it's the label where you left the remote repository. so 
Github will know your position and guide you where to 
catch up. so everybody in the repository can have a sync 
with each other and achieve the same goal.

How would you collaborate without using Git or GitHub? 
What would be easier, and what would be harder?
without git hub, callabration will be only via messages, 
calls showing other people what you have changed, or maybe
there is a manger guiding different people doing different 
things. while using github you can automatically callabrate 
with people without concerning other people not understanding
your code, in this way, it becomes toally fluent in order
to collabrate. everybody is understood by the difference of
the code and comments they give.
